[{"categories":null,"content":"中国现在陷入了一个在多数人看来比较尴尬的局面。这次的结果虽然让人失望，但可以理解：中美实力本就不匹配，若冲动蛮干吃亏的是中国。4号中国将会在台湾举行大型军演，中国能不能挽回颜面也许就看这个了。 否则，中国的妥协将会沦为世界的笑柄，假若中国因这个失去了一些国际影响力，那也太不值了。 实际上，中国进攻台湾的变数很大，访台是美国在引诱中国出手。 等到PLA攻台的时候，美国可能会等PLA弹药消耗再介入战局给PLA造成损失导致中国攻台失败，毕竟中美军事实力还是有点差距。 或者美国观望中台战争，等到中台两败俱伤再联合盟友制裁中国，收掉中国在美国的国债和资产。 所以美国比中国更着急。 转自推上一位老哥对我的回复： China’s goal is to reunite Taiwan, not humilating a particular person. Pelosi’s visit gave China a good reason to tighten up the grip on Taiwan. From that perspective, Pelosi actually helped China. 这句话的意思是：“中国的目标是统一台湾，而不是羞辱某个人。佩洛西的访问让中国有充分的理由加强对台湾的控制。从这个角度来看，佩洛西实际上帮助了中国。” 我觉得这句话很有道理，佩洛西的访问给了中国理由去控制台湾，佩洛西访台中国没有出手也能看出习主席作为一个国家领导人所拥有的智慧，我们可以继续拭目以待。 文末总结： 中美在关键时刻总是会刹车的。 谁都不会认怂，但谁都不会打 ","date":"2022-08-03","objectID":"/blog.github.io/2022-08-03/:0:0","tags":null,"title":"2022/08/03 小记：关于台湾","uri":"/blog.github.io/2022-08-03/"},{"categories":null,"content":"主题文档 - 基本概念 探索 Hugo - LoveIt 主题的全部内容和背后的核心概念. ","date":"2022-02-11","objectID":"/blog.github.io/theme-documentation-basics/:0:0","tags":null,"title":"Hugo：如何使用Loveit主题建立博客","uri":"/blog.github.io/theme-documentation-basics/"},{"categories":null,"content":"1 准备 由于 Hugo 提供的便利性, Hugo 本身是这个主题唯一的依赖. 直接安装满足你操作系统 (Windows, Linux, macOS) 的最新版本  Hugo (\u003e 0.62.0). 为什么不支持早期版本的 Hugo?\r由于 Markdown 渲染钩子函数 在 Hugo 圣诞节版本 中被引入, 本主题只支持高于 0.62.0 的 Hugo 版本.\r推荐使用 Hugo extended 版本\r由于这个主题的一些特性需要将  SCSS 转换为  CSS, 推荐使用 Hugo extended 版本来获得更好的使用体验.\r","date":"2022-02-11","objectID":"/blog.github.io/theme-documentation-basics/:1:0","tags":null,"title":"Hugo：如何使用Loveit主题建立博客","uri":"/blog.github.io/theme-documentation-basics/"},{"categories":null,"content":"2 安装 以下步骤可帮助你初始化新网站. 如果你根本不了解 Hugo, 我们强烈建议你按照此 快速入门文档 进一步了解它. ","date":"2022-02-11","objectID":"/blog.github.io/theme-documentation-basics/:2:0","tags":null,"title":"Hugo：如何使用Loveit主题建立博客","uri":"/blog.github.io/theme-documentation-basics/"},{"categories":null,"content":"2.1 创建你的项目 Hugo 提供了一个 new 命令来创建一个新的网站: hugo new site my_website cd my_website ","date":"2022-02-11","objectID":"/blog.github.io/theme-documentation-basics/:2:1","tags":null,"title":"Hugo：如何使用Loveit主题建立博客","uri":"/blog.github.io/theme-documentation-basics/"},{"categories":null,"content":"2.2 安装主题 LoveIt 主题的仓库是: https://github.com/dillonzq/LoveIt. 你可以下载主题的 最新版本  .zip 文件 并且解压放到 themes 目录. 另外, 也可以直接把这个主题克隆到 themes 目录: git clone https://github.com/dillonzq/LoveIt.git themes/LoveIt 或者, 初始化你的项目目录为 git 仓库, 并且把主题仓库作为你的网站目录的子模块: git init git submodule add https://github.com/dillonzq/LoveIt.git themes/LoveIt ","date":"2022-02-11","objectID":"/blog.github.io/theme-documentation-basics/:2:2","tags":null,"title":"Hugo：如何使用Loveit主题建立博客","uri":"/blog.github.io/theme-documentation-basics/"},{"categories":null,"content":"2.3 基础配置 以下是 LoveIt 主题的基本配置: baseURL = \"http://example.org/\" # 更改使用 Hugo 构建网站时使用的默认主题 theme = \"LoveIt\" # 网站标题 title = \"我的全新 Hugo 网站\" # 网站语言, 仅在这里 CN 大写 [\"en\", \"zh-CN\", \"fr\", \"pl\", ...] languageCode = \"zh-CN\" # 语言名称 [\"English\", \"简体中文\", \"Français\", \"Polski\", ...] languageName = \"简体中文\" # 是否包括中日韩文字 hasCJKLanguage = true # 作者配置 [author] name = \"xxxx\" email = \"\" link = \"\" # 菜单配置 [menu] [[menu.main]] weight = 1 identifier = \"posts\" # 你可以在名称 (允许 HTML 格式) 之前添加其他信息, 例如图标 pre = \"\" # 你可以在名称 (允许 HTML 格式) 之后添加其他信息, 例如图标 post = \"\" name = \"文章\" url = \"/posts/\" # 当你将鼠标悬停在此菜单链接上时, 将显示的标题 title = \"\" [[menu.main]] weight = 2 identifier = \"tags\" pre = \"\" post = \"\" name = \"标签\" url = \"/tags/\" title = \"\" [[menu.main]] weight = 3 identifier = \"categories\" pre = \"\" post = \"\" name = \"分类\" url = \"/categories/\" title = \"\" # Hugo 解析文档的配置 [markup] # 语法高亮设置 (https://gohugo.io/content-management/syntax-highlighting) [markup.highlight] # false 是必要的设置 (https://github.com/dillonzq/LoveIt/issues/158) noClasses = false Note\r在构建网站时, 你可以使用 --theme 选项设置主题. 但是, 我建议你修改配置文件 (config.toml) 将本主题设置为默认主题.\r","date":"2022-02-11","objectID":"/blog.github.io/theme-documentation-basics/:2:3","tags":null,"title":"Hugo：如何使用Loveit主题建立博客","uri":"/blog.github.io/theme-documentation-basics/"},{"categories":null,"content":"2.4 创建你的第一篇文章 以下是创建第一篇文章的方法: hugo new posts/first_post.md 通过添加一些示例内容并替换文件开头的标题, 你可以随意编辑文章. Note\r默认情况下, 所有文章和页面均作为草稿创建. 如果想要渲染这些页面, 请从元数据中删除属性 draft: true, 设置属性 draft: false 或者为 hugo 命令添加 -D/--buildDrafts 参数.\r","date":"2022-02-11","objectID":"/blog.github.io/theme-documentation-basics/:2:4","tags":null,"title":"Hugo：如何使用Loveit主题建立博客","uri":"/blog.github.io/theme-documentation-basics/"},{"categories":null,"content":"2.5 在本地启动网站 使用以下命令启动网站: hugo serve 去查看 http://localhost:1313. 基本配置下的预览\rTip\r当你运行 hugo serve 时, 当文件内容更改时, 页面会随着更改自动刷新.\rNote\r由于本主题使用了 Hugo 中的 .Scratch 来实现一些特性, 非常建议你为 hugo server 命令添加 --disableFastRender 参数来实时预览你正在编辑的文章页面. hugo serve --disableFastRender ","date":"2022-02-11","objectID":"/blog.github.io/theme-documentation-basics/:2:5","tags":null,"title":"Hugo：如何使用Loveit主题建立博客","uri":"/blog.github.io/theme-documentation-basics/"},{"categories":null,"content":"2.6 构建网站 当你准备好部署你的网站时, 运行以下命令: hugo 会生成一个 public 目录, 其中包含你网站的所有静态内容和资源. 现在可以将其部署在任何 Web 服务器上. Tip\r网站内容可以通过 Netlify 自动发布和托管 (了解有关通过 Netlify 进行 HUGO 自动化部署 的更多信息). 或者, 您可以使用 AWS Amplify, Github pages, Render 以及更多…\r","date":"2022-02-11","objectID":"/blog.github.io/theme-documentation-basics/:2:6","tags":null,"title":"Hugo：如何使用Loveit主题建立博客","uri":"/blog.github.io/theme-documentation-basics/"},{"categories":null,"content":"3 配置 ","date":"2022-02-11","objectID":"/blog.github.io/theme-documentation-basics/:3:0","tags":null,"title":"Hugo：如何使用Loveit主题建立博客","uri":"/blog.github.io/theme-documentation-basics/"},{"categories":null,"content":"3.1 网站配置 除了 Hugo 全局配置 和 菜单配置 之外, LoveIt 主题还允许您在网站配置中定义以下参数 (这是一个示例 config.toml, 其内容为默认值). 请打开下面的代码块查看完整的示例配置 : baseURL = \"http://example.org/\" # 更改使用 Hugo 构建网站时使用的默认主题 theme = \"LoveIt\" # 网站标题 title = \"我的全新 Hugo 网站\" # 网站语言, 仅在这里 CN 大写 [\"en\", \"zh-CN\", \"fr\", \"pl\", ...] languageCode = \"zh-CN\" # 语言名称 [\"English\", \"简体中文\", \"Français\", \"Polski\", ...] languageName = \"简体中文\" # 是否包括中日韩文字 hasCJKLanguage = true # 默认每页列表显示的文章数目 paginate = 12 # 谷歌分析代号 [UA-XXXXXXXX-X] googleAnalytics = \"\" # 版权描述，仅仅用于 SEO copyright = \"\" # 是否使用 robots.txt enableRobotsTXT = true # 是否使用 git 信息 enableGitInfo = true # 是否使用 emoji 代码 enableEmoji = true # 忽略一些构建错误 ignoreErrors = [\"error-remote-getjson\", \"error-missing-instagram-accesstoken\"] # 作者配置 [author] name = \"xxxx\" email = \"\" link = \"\" # 菜单配置 [menu] [[menu.main]] weight = 1 identifier = \"posts\" # 你可以在名称 (允许 HTML 格式) 之前添加其他信息, 例如图标 pre = \"\" # 你可以在名称 (允许 HTML 格式) 之后添加其他信息, 例如图标 post = \"\" name = \"文章\" url = \"/posts/\" # 当你将鼠标悬停在此菜单链接上时, 将显示的标题 title = \"\" [[menu.main]] weight = 2 identifier = \"tags\" pre = \"\" post = \"\" name = \"标签\" url = \"/tags/\" title = \"\" [[menu.main]] weight = 3 identifier = \"categories\" pre = \"\" post = \"\" name = \"分类\" url = \"/categories/\" title = \"\" [params] # 网站默认主题样式 [\"auto\", \"light\", \"dark\"] defaultTheme = \"auto\" # 公共 git 仓库路径，仅在 enableGitInfo 设为 true 时有效 gitRepo = \"\" # 哪种哈希函数用来 SRI, 为空时表示不使用 SRI # [\"sha256\", \"sha384\", \"sha512\", \"md5\"] fingerprint = \"\" # 日期格式 dateFormat = \"2006-01-02\" # 网站标题, 用于 Open Graph 和 Twitter Cards title = \"我的网站\" # 网站描述, 用于 RSS, SEO, Open Graph 和 Twitter Cards description = \"这是我的全新 Hugo 网站\" # 网站图片, 用于 Open Graph 和 Twitter Cards images = [\"/logo.png\"] # 页面头部导航栏配置 [params.header] # 桌面端导航栏模式 [\"fixed\", \"normal\", \"auto\"] desktopMode = \"fixed\" # 移动端导航栏模式 [\"fixed\", \"normal\", \"auto\"] mobileMode = \"auto\" # 页面头部导航栏标题配置 [params.header.title] # LOGO 的 URL logo = \"\" # 标题名称 name = \"\" # 你可以在名称 (允许 HTML 格式) 之前添加其他信息, 例如图标 pre = \"\" # 你可以在名称 (允许 HTML 格式) 之后添加其他信息, 例如图标 post = \"\" # 是否为标题显示打字机动画 typeit = false # 页面底部信息配置 [params.footer] enable = true # 自定义内容 (支持 HTML 格式) custom = '' # 是否显示 Hugo 和主题信息 hugo = true # 是否显示版权信息 copyright = true # 是否显示作者 author = true # 网站创立年份 since = 2019 # ICP 备案信息，仅在中国使用 (支持 HTML 格式) icp = \"\" # 许可协议信息 (支持 HTML 格式) license = '\u003ca rel=\"license external nofollow noopener noreffer\" href=\"https://creativecommons.org/licenses/by-nc/4.0/\" target=\"_blank\"\u003eCC BY-NC 4.0\u003c/a\u003e' # Section (所有文章) 页面配置 [params.section] # section 页面每页显示文章数量 paginate = 20 # 日期格式 (月和日) dateFormat = \"01-02\" # RSS 文章数目 rss = 10 # List (目录或标签) 页面配置 [params.list] # list 页面每页显示文章数量 paginate = 20 # 日期格式 (月和日) dateFormat = \"01-02\" # RSS 文章数目 rss = 10 # 应用图标配置 [params.app] # 当添加到 iOS 主屏幕或者 Android 启动器时的标题, 覆盖默认标题 title = \"我的网站\" # 是否隐藏网站图标资源链接 noFavicon = false # 更现代的 SVG 网站图标, 可替代旧的 .png 和 .ico 文件 svgFavicon = \"\" # Android 浏览器主题色 themeColor = \"#ffffff\" # Safari 图标颜色 iconColor = \"#5bbad5\" # Windows v8-10磁贴颜色 tileColor = \"#da532c\" # 搜索配置 [params.search] enable = true # 搜索引擎的类型 [\"lunr\", \"algolia\"] type = \"lunr\" # 文章内容最长索引长度 contentLength = 4000 # 搜索框的占位提示语 placeholder = \"\" # 最大结果数目 maxResultLength = 10 # 结果内容片段长度 snippetLength = 50 # 搜索结果中高亮部分的 HTML 标签 highlightTag = \"em\" # 是否在搜索索引中使用基于 baseURL 的绝对路径 absoluteURL = false [params.search.algolia] index = \"\" appID = \"\" searchKey = \"\" # 主页配置 [params.home] # RSS 文章数目 rss = 10 # 主页个人信息 [params.home.profile] enable = true # Gravatar 邮箱，用于优先在主页显示的头像 gravatarEmail = \"\" # 主页显示头像的 URL avatarURL = \"/images/avatar.png\" # 主页显示的网站标题 (支持 HTML 格式) title = \"\" # 主页显示的网站副标题 (允许 HTML 格式) subtitle = \"这是我的全新 Hugo 网站\" # 是否为副标题显示打字机动画 typeit = true # 是否显示社交账号 social = true # 免责声明 (支持 HTML 格式) disclaimer = \"\" # 主页文章列表 [params.home.posts] enable = true # 主页每页显示文章数量 paginate = 6 # 被 params.page 中的 hiddenFromHomePage 替代 # 当你没有在文章前置参数中设置 \"hiddenFromHomePage\" 时的默认行为 defaultHiddenFromHomePage = false # 作者的社交信息设置 [params.social] GitHub = \"xxxx\" Linkedin = \"\" Twitter = \"xxxx\" Instagram = \"xxxx\" Facebook = \"xxxx\" Telegram = \"xxxx\" Medium = \"\" Gitlab = \"\" Youtubelegacy = \"\" Youtubecustom = \"\" Youtu","date":"2022-02-11","objectID":"/blog.github.io/theme-documentation-basics/:3:1","tags":null,"title":"Hugo：如何使用Loveit主题建立博客","uri":"/blog.github.io/theme-documentation-basics/"},{"categories":null,"content":"3.2 网站图标, 浏览器配置, 网站清单 强烈建议你把: apple-touch-icon.png (180x180) favicon-32x32.png (32x32) favicon-16x16.png (16x16) mstile-150x150.png (150x150) android-chrome-192x192.png (192x192) android-chrome-512x512.png (512x512) 放在 /static 目录. 利用 https://realfavicongenerator.net/ 可以很容易地生成这些文件. 可以自定义 browserconfig.xml 和 site.webmanifest 文件来设置 theme-color 和 background-color. ","date":"2022-02-11","objectID":"/blog.github.io/theme-documentation-basics/:3:2","tags":null,"title":"Hugo：如何使用Loveit主题建立博客","uri":"/blog.github.io/theme-documentation-basics/"},{"categories":null,"content":"3.3 自定义样式 Note\rHugo extended 版本对于自定义样式是必需的.\r通过定义自定义 .scss 样式文件, LoveIt 主题支持可配置的样式. 包含自定义 .scss 样式文件的目录相对于 你的项目根目录 的路径为 assets/css. 在 assets/css/_override.scss 中, 你可以覆盖 themes/LoveIt/assets/css/_variables.scss 中的变量以自定义样式. 这是一个例子: @import url('https://fonts.googleapis.com/css?family=Fira+Mono:400,700\u0026display=swap\u0026subset=latin-ext'); $code-font-family: Fira Mono, Source Code Pro, Menlo, Consolas, Monaco, monospace; 在 assets/css/_custom.scss 中, 你可以添加一些 CSS 样式代码以自定义样式. ","date":"2022-02-11","objectID":"/blog.github.io/theme-documentation-basics/:3:3","tags":null,"title":"Hugo：如何使用Loveit主题建立博客","uri":"/blog.github.io/theme-documentation-basics/"},{"categories":null,"content":"4 多语言和 i18n LoveIt 主题完全兼容 Hugo 的多语言模式, 并且支持在网页上切换语言. 语言切换\r","date":"2022-02-11","objectID":"/blog.github.io/theme-documentation-basics/:4:0","tags":null,"title":"Hugo：如何使用Loveit主题建立博客","uri":"/blog.github.io/theme-documentation-basics/"},{"categories":null,"content":"4.1 兼容性 语言 Hugo 代码 HTML lang 属性 主题文档 Lunr.js 支持 英语 en en 简体中文 zh-cn zh-CN 繁體中文 zh-tw zh-TW 法语 fr fr 波兰语 pl pl 巴西葡萄牙语 pt-br pt-BR 意大利语 it it 西班牙语 es es 德语 de de 塞尔维亚语 pl pl 俄语 ru ru 罗马尼亚语 ro ro 越南语 vi vi 阿拉伯语 ar ar 加泰罗尼亚语 ca ca 泰语 th th 泰卢固语 te te 印尼语 id id 土耳其语 tr tr 韩语 ko ko 印地语 hi hi ","date":"2022-02-11","objectID":"/blog.github.io/theme-documentation-basics/:4:1","tags":null,"title":"Hugo：如何使用Loveit主题建立博客","uri":"/blog.github.io/theme-documentation-basics/"},{"categories":null,"content":"4.2 基本配置 学习了 Hugo如何处理多语言网站 之后, 请在 站点配置 中定义你的网站语言. 例如, 一个支持英语, 中文和法语的网站配置: # 设置默认的语言 [\"en\", \"zh-cn\", \"fr\", \"pl\", ...] defaultContentLanguage = \"zh-cn\" [languages] [languages.en] weight = 1 title = \"My New Hugo Site\" languageCode = \"en\" languageName = \"English\" [[languages.en.menu.main]] weight = 1 identifier = \"posts\" pre = \"\" post = \"\" name = \"Posts\" url = \"/posts/\" title = \"\" [[languages.en.menu.main]] weight = 2 identifier = \"tags\" pre = \"\" post = \"\" name = \"Tags\" url = \"/tags/\" title = \"\" [[languages.en.menu.main]] weight = 3 identifier = \"categories\" pre = \"\" post = \"\" name = \"Categories\" url = \"/categories/\" title = \"\" [languages.zh-cn] weight = 2 title = \"我的全新 Hugo 网站\" languageCode = \"zh-CN\" languageName = \"简体中文\" hasCJKLanguage = true [[languages.zh-cn.menu.main]] weight = 1 identifier = \"posts\" pre = \"\" post = \"\" name = \"文章\" url = \"/posts/\" title = \"\" [[languages.zh-cn.menu.main]] weight = 2 identifier = \"tags\" pre = \"\" post = \"\" name = \"标签\" url = \"/tags/\" title = \"\" [[languages.zh-cn.menu.main]] weight = 3 identifier = \"categories\" pre = \"\" post = \"\" name = \"分类\" url = \"/categories/\" title = \"\" [languages.fr] weight = 3 title = \"Mon nouveau site Hugo\" languageCode = \"fr\" languageName = \"Français\" [[languages.fr.menu.main]] weight = 1 identifier = \"posts\" pre = \"\" post = \"\" name = \"Postes\" url = \"/posts/\" title = \"\" [[languages.fr.menu.main]] weight = 2 identifier = \"tags\" pre = \"\" post = \"\" name = \"Balises\" url = \"/tags/\" title = \"\" [[languages.fr.menu.main]] weight = 3 identifier = \"categories\" pre = \"\" post = \"\" name = \"Catégories\" url = \"/categories/\" title = \"\" 然后, 对于每个新页面, 将语言代码附加到文件名中. 单个文件 my-page.md 需要分为三个文件: 英语: my-page.en.md 中文: my-page.zh-cn.md 法语: my-page.fr.md Note\r请注意, 菜单中仅显示翻译的页面. 它不会替换为默认语言内容.\rTip\r也可以使用 文章前置参数 来翻译网址.\r","date":"2022-02-11","objectID":"/blog.github.io/theme-documentation-basics/:4:2","tags":null,"title":"Hugo：如何使用Loveit主题建立博客","uri":"/blog.github.io/theme-documentation-basics/"},{"categories":null,"content":"4.3 修改默认的翻译字符串 翻译字符串用于在主题中使用的常见默认值. 目前提供一些语言的翻译, 但你可能自定义其他语言或覆盖默认值. 要覆盖默认值, 请在你项目的 i18n 目录 i18n/\u003clanguageCode\u003e.toml 中创建一个新文件，并从 themes/LoveIt/i18n/en.toml 中获得提示. 另外, 由于你的翻译可能会帮助到其他人, 请花点时间通过  创建一个 PR 来贡献主题翻译, 谢谢! ","date":"2022-02-11","objectID":"/blog.github.io/theme-documentation-basics/:4:3","tags":null,"title":"Hugo：如何使用Loveit主题建立博客","uri":"/blog.github.io/theme-documentation-basics/"},{"categories":null,"content":"5 搜索 基于 Lunr.js 或 algolia, LoveIt 主题支持搜索功能. ","date":"2022-02-11","objectID":"/blog.github.io/theme-documentation-basics/:5:0","tags":null,"title":"Hugo：如何使用Loveit主题建立博客","uri":"/blog.github.io/theme-documentation-basics/"},{"categories":null,"content":"5.1 输出配置 为了生成搜索功能所需要的 index.json, 请在你的 网站配置 中添加 JSON 输出文件类型到 outputs 部分的 home 字段中. [outputs] home = [\"HTML\", \"RSS\", \"JSON\"] ","date":"2022-02-11","objectID":"/blog.github.io/theme-documentation-basics/:5:1","tags":null,"title":"Hugo：如何使用Loveit主题建立博客","uri":"/blog.github.io/theme-documentation-basics/"},{"categories":null,"content":"5.2 搜索配置 基于 Hugo 生成的 index.json 文件, 你可以激活搜索功能. 这是你的 网站配置 中的搜索部分: [params.search] enable = true # 搜索引擎的类型 [\"lunr\", \"algolia\"] type = \"lunr\" # 文章内容最长索引长度 contentLength = 4000 # 搜索框的占位提示语 placeholder = \"\" # 最大结果数目 maxResultLength = 10 # 结果内容片段长度 snippetLength = 50 # 搜索结果中高亮部分的 HTML 标签 highlightTag = \"em\" # 是否在搜索索引中使用基于 baseURL 的绝对路径 absoluteURL = false [params.search.algolia] index = \"\" appID = \"\" searchKey = \"\" 怎样选择搜索引擎?\r以下是两种搜索引擎的对比: lunr: 简单, 无需同步 index.json, 没有 contentLength 的限制, 但占用带宽大且性能低 (特别是中文需要一个较大的分词依赖库) algolia: 高性能并且占用带宽低, 但需要同步 index.json 且有 contentLength 的限制 文章内容被 h2 和 h3 HTML 标签切分来提高查询效果并且基本实现全文搜索. contentLength 用来限制 h2 和 h3 HTML 标签开头的内容部分的最大长度. 关于 algolia 的使用技巧\r你需要上传 index.json 到 algolia 来激活搜索功能. 你可以使用浏览器来上传 index.json 文件但是一个自动化的脚本可能效果更好. 官方提供的 Algolia CLI 是一个不错的选择. 为了兼容 Hugo 的多语言模式, 你需要上传不同语言的 index.json 文件到对应的 algolia index, 例如 zh-cn/index.json 或 fr/index.json…\r","date":"2022-02-11","objectID":"/blog.github.io/theme-documentation-basics/:5:2","tags":null,"title":"Hugo：如何使用Loveit主题建立博客","uri":"/blog.github.io/theme-documentation-basics/"},{"categories":null,"content":"这是一篇有关SUpsilon访问统计系统（v1.4.4）的使用指南（应用于Wikidot） 源文件位于这里：http://www.brella.top/supsilon/supsilon-access-system.js 这玩意是我本年度写过第二长的代码，Bug一堆~ 版本仍为测试版，数据显示不稳定 SUpsilon访问统计系统能够让你直观地看见你网站或页面的总访客人数、总访问次数以及单页面的访问次数，现在我们开始使用吧！ 1.你需要将SUpsilon系统安装到你的网站上（至少在主页有一个系统的安装），在你的网站的任何想要显示相关数据的地方输入以下字段： [[html]] \u003cscript async src=\"http://www.brella.top/supsilon/supsilon-access-system.js\"\u003e \u003c/script\u003e [[/html]] 2.当系统安装完毕时，它便已经开始工作了，你只需要在你想要显示网站相关数据的地方安装SUpsilon标签（这些标签必须和SUpsilon系统本源在一个页面中）。 在你想要显示网站总访问量的地方输入以下字段： [[html]] 站点总访问量\u003cspan id=\"supsilon_value_site_pv\"\u003e\u003c/span\u003e次 [[/html]] 在你想要显示网站总访客人数的地方输入以下字段： [[html]] 站点总访客人数\u003cspan id=\"supsilon_value_site_uv\"\u003e\u003c/span\u003e人次 [[/html]] 在你想要显示网站总访客人数的地方输入以下字段： [[html]] 本页面总访问量\u003cspan id=\"supsilon_value_page_pv\"\u003e\u003c/span\u003e次 [[/html]] Tip\r请注意！标签必须和SUpsilon系统本源在同一个页面中\r如果你嫌以上操作过于麻烦，可以直接使用下面的代码 [[html]] \u003cscript async src=\"http://www.brella.top/supsilon/supsilon-access-system.js\"\u003e \u003c/script\u003e 本站总访问量\u003cspan id=\"supsilon_value_site_pv\"\u003e\u003c/span\u003e次 本站访客数\u003cspan id=\"supsilon_value_site_uv\"\u003e\u003c/span\u003e人次 本文总阅读量\u003cspan id=\"supsilon_value_page_pv\"\u003e\u003c/span\u003e次 [[/html]] ","date":"2022-01-17","objectID":"/blog.github.io/how-to-use-supsilon-access-system/:1:0","tags":null,"title":"如何使用SUpsilon网站访客统计系统","uri":"/blog.github.io/how-to-use-supsilon-access-system/"},{"categories":null,"content":"本人真名Chou Chün-tsai，别名Brella、云栈、雲棧 热爱政治、经济和网络技术 常用文字有简体中文、繁體中文和English 常用语言有国语、English和Szechwanese 欢迎大家来参观我最新的博客网站:) 最早的那个可以算半废了 以后这里会转载我在其他平台发布的文章、观点或者单纯小记，大多数涉及政治、经济和网络技术XD （嗯，这应该算是我拥有的众多网站里最清新脱俗的一个了吧…） ","date":"2021-02-07","objectID":"/blog.github.io/first_post/:0:0","tags":null,"title":"第一篇博客：介绍","uri":"/blog.github.io/first_post/"}]